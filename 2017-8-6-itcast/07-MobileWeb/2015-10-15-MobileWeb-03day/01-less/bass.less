// 注释  这里是单行注释 也叫静默注释 是给开发者看的 并不会编译到css中去

/* 多行注释 这是给用户或者想让人看到的css注释 会编译到css文件中*/

// 
@import './settings.less';
// 变量 
// 格式:@变量名:value

// @primaryColor:#00ffff;
// @fontColor:#666;
// @bg: #f5f5f5;
// @normal:36px;
// @font-size:12px;

body {
    background-color: @bg;
    color: @fontColor;
}
div {
    width: 100px;
    height: 100px;
    background-color: @primaryColor;
}

// 嵌套规则
// 注意 css嵌套最好不要超过三层

div {
    ul {
        width: 100%;
        height: 100%;
        li{
            float: left;
            width: 100%;
            height: @normal;
        }
    }

    li a {
        font-size: @font-size;
        color:@primaryColor;
    }
}

// 父选择器 &

div li {
    &:nth-child(1){
        background-color: red;
    }
    &::nth-child(2){
        background-color: blueviolet;
    }
    // 直接子元素 >
    >span {
        display: inline-block;
    }
}

// 四则运算

div {
    width:@normal * 2;
    // + 号也要注意不能和数字相连
    height: @normal + 2;
    padding: @normal / 4;
    //这里 - 号注意两边加空格
    margin: @normal - 2;
}

// 混合器 mixins 类似于函数
// .混合器名(参数){}
// 无参混合器
.change(){
    &:hover {
        color: red;
        text-decoration: underline;
    }
    &:visited {
        color: pink;
    }
}

a {
    .change();
}

div {
    .change();
}
// 有参混合器    有参混合器必须传参数  但是可以给参数设置默认值
.changes (@color:orange,@width:100px,@height:100px){
    background-color: @color;
    width: @width;
    height:@height;
}

div {
    .changes(@primaryColor, 100px, @normal)
}

.box {
    .changes();
}
// 继承(拓展)
// 格式:  &:extend(选择器)  并集选择器
// 少用  当两个元素最多有一两句代码不同再用继承

.box1 {
    width: 100px;
    height: 100px;
    font-size: @font-size;
}

.box2 {
    &:extend(.box1);
}

.box2 {
    background-color: @bg;
}

// 引入其他less文件
// @import 'src';
// @import url();
// 尽量在文件最顶端引入其他less文件