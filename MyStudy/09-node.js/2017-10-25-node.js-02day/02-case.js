// 通过require既可以加载系统模块 也可以加载文件模块

// 关于require的使用有一些细节

// require本身是一个函数

// 传递不同的参数 其执行结果也有所不同

// 当传入一个字符串时 且不以./ 或 ../开头 
// 会自动当成一个系统模加载

// 注:以往我们认为路径不写. 会默认当成./(当前目录)

// require("example.js");

// 2.node.js会自动将.js和.json结尾文件视为模块
// 所以在使用require加载模块时可以省略.js和.json后缀

require("./01-cart");
require("./demo");

// 3.关于require加载模块 还可以分成更多的情况

// 当目录中存在 node_modules 这样一个特殊目录时
// 在使用require时 如果么有使用相对路径
// 会优先去node_modules下查找 如果查找不到去父级目录查找
// ...如果一直未找到 node_modules 才会认为是系统模块

require("demo");

// 4.也可将模块拆分成若干小文件 将这些相关的小文件放在同一目录下
// 那么这个目录也会被认为是一个模块哦

// 在加载模块时时 node.js可以省略后缀 这样就会产生歧义
// 例如 ./cart 即可以理解为 ./cart 目录 也可以理解为 ./cart.js 或 .cart.json
// 遇到这种情况时 node.js会优先当成目录来对待 再去查找目录中有没有index.js
// 如果没有找到 则表明当成目录加载失败 再尝试加载文件
// 也就是说 多文件模块中 必须包含一个index.js入口文件

require("./cart");

// 当讲多个文件放到同一目录下 需要对此模块进行说明 包描述文件
// 通常将模块形象的成为包
// 需要一个文件对模块进行说明 称为包描述文件
// 这个文件统一名为 package.json
// 在这个描述文件中 可以写任意内容 只要符合json语法
// 但是 有几项是必须的 例如:版本 名称 作者等

// 这个文件 可以通过手工创建 也可以通过命令创建
// 当使用命令创建时 需要在包的根目录下 打开命令行 执行 npm init
